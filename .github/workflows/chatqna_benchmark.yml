# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: benchmark test with chatqna_benchmark

on:
  pull_request:
    branches: [main]
    types: [opened, reopened, ready_for_review, synchronize]
    # inputs:
    #   variables:
    #     hardware:
    #       description: 'Enter your param' #gaudi or xeon
    #       required: true
    #       default: xeon
  # schedule:
  #   - cron: "35 1 * * 5"
  workflow_dispatch:
    variables:
      inputs:
        hardware:
          description: 'Enter your hardware' #gaudi or xeon
          required: true
          default: xeon

jobs:
  # job1:
  #   uses: ./.github/workflows/reuse-get-test-matrix.yml
  #   with:
  #     diff_excluded_files: '.github|README.md|*.txt|deprecate|kubernetes|manifest|gmc|assets'

  Example-test:
    # needs: [job1]
    # strategy:
    #   matrix: ${{ fromJSON(needs.job1.outputs.run_matrix) }}
    # runs-on: ${{ matrix.hardware }}
    # runs-on: ${{ github.event.inputs.hardware }}
    runs-on: xeon  #gaudi
    # continue-on-error: true
    steps:
      - name: Clean Up Working Directory
        run: sudo rm -rf ${{github.workspace}}/*

      - name: Checkout out Repo
        uses: actions/checkout@v4

      - name: Clone repo GenAIEval
        run: |
          git clone https://github.com/opea-project/GenAIEval.git
          cd GenAIEval && git checkout v0.6

      - name: Run test
        env:
          HUGGINGFACEHUB_API_TOKEN: ${{ secrets.HUGGINGFACEHUB_API_TOKEN }}
          GOOGLE_CSE_ID: ${{ secrets.GOOGLE_CSE_ID }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          # example: ${{ matrix.example }}
          hardware: xeon #${{ matrix.hardware }}
          mode: perf
          IMAGE_TAG: latest
          IMAGE_REPO_GAUDI: ${{ vars.IMAGE_REPO_GAUDI }}
          IMAGE_REPO_XEON: ${{ vars.IMAGE_REPO_XEON }}
        run: |
          # cd ${{ github.workspace }}/$example/tests
          cd ${{ github.workspace }}/.github/workflows
          cp ../../GenAIEval/evals/benchmark/chatqna_benchmark.py .
          cp ../../GenAIEval/evals/benchmark/data.json ../../ChatQnA/docker/${hardware}/

          if [ "$hardware" == "gaudi" ]; then IMAGE_REPO=$IMAGE_REPO_GAUDI; else IMAGE_REPO=$IMAGE_REPO_XEON; fi
          export IMAGE_REPO=${IMAGE_REPO}
          # example_l=$(echo $example | tr '[:upper:]' '[:lower:]')
          if [ -f test_chatqna_on_${hardware}.sh ]; then timeout 30m bash test_chatqna_on_${hardware}.sh > ${hardware}_output.log; else echo "Test script not found, skip test!"; fi

      - name: Process log and save to JSON
        env:
          hardware: xeon
        run: |
          cd ${{ github.workspace }}/.github/workflows
          echo '{}' > ${hardware}_output.json
          echo $(grep -a 'Total Requests:' ${hardware}_output.log | awk '{print "{\"total_requests\": \""$3 "\"}"}') > ${hardware}_output.json
          echo $(grep -a 'P50 latency is' ${hardware}_output.log | awk '{print "{\"p50_latency\": \""$4 "\"}"}') >> ${hardware}_output.json
          echo $(grep -a 'P99 latency is' ${hardware}_output.log | awk '{print "{\"p99_latency\": \""$4 "\"}"}') >> ${hardware}_output.json
          jq -s 'add' ${hardware}_output.json > ${hardware}_final_output.json && mv ${hardware}_final_output.json ${hardware}_output.json

      # - name: Clean up container
      #   env:
      #     example: ${{ matrix.example }}
      #     hardware: ${{ matrix.hardware }}
      #   if: cancelled() || failure()
      #   run: |
      #     cd ${{ github.workspace }}/$example/docker/$hardware
      #     container_list=$(cat docker_compose.yaml | grep container_name | cut -d':' -f2)
      #     for container_name in $container_list; do
      #         cid=$(docker ps -aq --filter "name=$container_name")
      #         if [[ ! -z "$cid" ]]; then docker stop $cid && docker rm $cid && sleep 1s; fi
      #     done
      #     echo y | docker system prune

      - name: Publish pipeline artifact
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.example }}-${{ matrix.hardware }}
          path: ${{ github.workspace }}/.github/workflows/*.log
