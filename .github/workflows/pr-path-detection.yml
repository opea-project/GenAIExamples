# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: Check for missing Dockerfile paths in repo comps

on:
  pull_request:
    branches: [main]
    types: [opened, reopened, ready_for_review, synchronize]

jobs:
  check-dockerfile-paths:
    runs-on: ubuntu-latest

    steps:
      - name: Clean Up Working Directory
        run: sudo rm -rf ${{github.workspace}}/*

      - name: Checkout repo GenAIExamples
        uses: actions/checkout@v4

      - name: Clone repo GenAIComps
        run: |
          cd ..
          git clone https://github.com/opea-project/GenAIComps.git

      - name: Check for missing Dockerfile paths in GenAIComps
        run: |
          cd ${{github.workspace}}
          miss="FALSE"
          while IFS=: read -r file line content; do
              dockerfile_path=$(echo "$content" | awk -F '-f ' '{print $2}' | awk '{print $1}')
              if [[ ! -f "../GenAIComps/${dockerfile_path}" ]]; then
                  miss="TRUE"
                  echo "Missing Dockerfile: GenAIComps/${dockerfile_path} (Referenced in GenAIExamples/${file}:${line})"
              fi
          done < <(grep -Ern 'docker build .* -f comps/.+/Dockerfile' --include='*.md' .)


          if [[ "$miss" == "TRUE" ]]; then
            exit 1
          fi

        shell: bash

  Check-the-validity-of-hyperlinks-in-README:
    runs-on: self-hosted
    steps:
      - name: Clean Up Working Directory
        run: sudo rm -rf ${{github.workspace}}/*

      - name: Checkout repo GenAIExamples
        uses: actions/checkout@v4

      - name: Check the validity of hyperlinks
        run: |
          cd ${{github.workspace}}
          fail="FALSE"
          url_lines=$(grep -Eo '\]\(http[s]?://[^)]+\)' -r .)
          if [ -n "$url_lines" ]; then
            for url_line in $url_lines; do
              echo $? $url_line
              url=$(echo "$url_line"|cut -d '(' -f2 | cut -d ')' -f1|sed 's/\.git$//')
              echo $? $url_line
              path=$(echo "$url_line"|cut -d':' -f1 | cut -d'/' -f2-)
              echo $? $url_line
              response=$(curl -I -L -s -o /dev/null -w "%{http_code}" "$url")
              echo $? $url_line
              # if [ "$response" -ne 200 ]; then
              #   echo "**********Validation failed, try again**********"
              #   response_retry=$(curl -s -o /dev/null -w "%{http_code}" "$url")
              #   if [ "$response_retry" -eq 200 ]; then
              #     echo "*****Retry successfully*****"
              #   else
              #     echo "Invalid link from ${{github.workspace}}/$path: $url"
              #     fail="TRUE"
              #     echo "$fail"$?
              #   fi
              # fi
            done
            echo "exit for:"$?
          fi
          echo "exit if:"$?

          if [[ "$fail" == "TRUE" ]]; then
            exit 1
          else
            echo "All hyperlinks are valid."
          fi
        shell: bash

  Check-the-validity-of-relative-path:
    runs-on: self-hosted   #ubuntu-latest
    steps:
      - name: Clean Up Working Directory
        run: sudo rm -rf ${{github.workspace}}/*

      - name: Checkout repo GenAIExamples
        uses: actions/checkout@v4

      - name: Checking relative path validity
        run: |
          cd ${{github.workspace}}
          fail="FALSE"
          link_head="https://github.com/opea-project/GenAIExamples/blob/main/"
          png_lines=$(grep -Eo '\]\([^)]+\)' -r -I .|grep -Ev 'http')
          if [ -n "$png_lines" ]; then
            for png_line in $png_lines; do
              refer_path=$(echo "$png_line"|cut -d':' -f1 | cut -d'/' -f2-)
              png_path=$(echo "$png_line"|cut -d '(' -f2 | cut -d ')' -f1)
              check_path=${{github.workspace}}/$(dirname "$refer_path")/$png_path
              real_path=$(realpath $check_path)
              if [ $? -ne 0 ]; then
                echo "Path $png_path in file ${{github.workspace}}/$refer_path does not exist"
                fail="TRUE"
              else
                url=$link_head$(echo "$real_path" | sed 's|.*/GenAIExamples/||')
                response=$(curl -I -L -s -o /dev/null -w "%{http_code}" "$url")
                if [ "$response" -ne 200 ]; then
                  echo "**********Validation failed, try again**********"
                  response_retry=$(curl -s -o /dev/null -w "%{http_code}" "$url")
                  if [ "$response_retry" -eq 200 ]; then
                    echo "*****Retry successfully*****"
                  else
                    echo "Invalid link from $check_path: $url"
                    fail="TRUE"
                  fi
                fi
              fi
            done
          fi

          if [[ "$fail" == "TRUE" ]]; then
            exit 1
          else
            echo "All hyperlinks are valid."
          fi
        shell: bash
