# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: Container CI
permissions: read-all
on:
  workflow_dispatch:
    inputs:
      group_dir:
        required: true
        description: 'Enter Container Group Directory:'
        type: string
      env_overrides:
        description: 'Enter Bash Env Variable Overrides in `KEY=VAL KEY2=VAL2` format:'
        required: false
        type: string
      runner_label:
        description: 'Enter Validation Runner Label:'
        default: test-runner
        required: true
        type: string
  workflow_call:
    inputs:
      group_dir:
        required: true
        type: string
jobs:
####################################################################################################
# Compose Build
####################################################################################################
  build-containers:
    runs-on: ubuntu-latest # local registry label
    outputs:
      group: ${{ steps.build-group.outputs.container-group }}
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
      with:
        registry: ${{ secrets.REGISTRY }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
      if: ${{ !inputs.no_build }}
    - name: Build Container Group
      if: ${{ !inputs.no_build }}
      id: build-group
      uses: ./.github/workflows/composite/docker-build
      with:
        group_dir: ${{ inputs.group_dir }}
        env_overrides: ${{ inputs.env_overrides || env.env_overrides || '' }}
        registry: ${{ secrets.REGISTRY }}
####################################################################################################
# Trivy Scan
####################################################################################################
  setup-scan:
    needs: [build-containers]
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.scan-matrix.outputs.matrix }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        path: matrix
    - name: Set Matrix
      id: scan-matrix
      run: echo "matrix=$(cat matrix/*-${{ needs.build-containers.outputs.group }}/*.txt | jq -R '.' | jq -sc '. | unique')" >> $GITHUB_OUTPUT
  scan-containers:
    needs: [setup-scan]
    if: ${{ !inputs.no_build && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest # local registry label
    env:
      GROUP_DIR: ${{ inputs.group_dir }}
    strategy:
      matrix:
        container: ${{ fromJSON(needs.setup-scan.outputs.matrix) }}
      fail-fast: false
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
      with:
        registry: ${{ secrets.REGISTRY }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
    - name: Downcase Group Dir
      run: echo "group_dir=${GROUP_DIR,,}" >> ${GITHUB_ENV}
    - name: Pull Image
      run: docker pull ${{ secrets.REGISTRY }}/${{ env.group_dir }}:${{ matrix.container }}
      env:
        GROUP_DIR: ${{ inputs.group_dir }}
    - name: Scan Container
      uses: ./.github/workflows/composite/scan
      with:
        image-ref: ${{ secrets.REGISTRY }}/${{ env.group_dir }}:${{ matrix.container }}
        output: ${{ matrix.container }}-${{ env.group_dir }}-scan.sarif
    - name: Cleanup
      if: always()
      run: docker rmi -f ${{ secrets.REGISTRY }}/${{ env.group_dir }}:${{ matrix.container }}
    - uses: github/codeql-action/upload-sarif@b611370bb5703a7efb587f9d136a52ea24c5c38c # v3.25.11
      with:
        sarif_file: '${{ matrix.container }}-${{ env.group_dir }}-scan.sarif'
        category: '${{ matrix.container }}'
      continue-on-error: true
  setup-test:
    needs: [build-containers]
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.test-matrix.outputs.matrix }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - name: Get Tests
      id: test-matrix
      run: echo "matrix=$(find ${{ inputs.group_dir }}/tests -type f -name 'test_*.sh' -print | jq -R . | jq -sc .)" >> $GITHUB_OUTPUT
  test-containers:
    needs: [setup-test]
    if: ${{ needs.setup-test.outputs.matrix != '[]' }}
    runs-on: ubuntu-latest # validation label
    strategy:
      matrix:
        tests: ${{ fromJson(needs.setup-test.outputs.matrix) }}
        experimental: [true]
      fail-fast: false
    steps:
    - uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - name: Run Test
      run: bash ${{ matrix.tests }}
      env:
        REGISTRY: ${{ secrets.REGISTRY }}
