# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

---
name: Run Docker Compose Test
description: Run docker compose test for examples
inputs:
  registry:
    description: Container Registry URL
    required: false
    default: ""
    type: string
  tag:
    description: Container Tag
    required: false
    default: "latest"
    type: string
  example:
    description: Example to test
    required: true
    type: string
  test_case:
    description: Test for examples
    required: true
    type: string
  hardware:
    description: Hardware to run the test on
    required: true
    type: string
runs:
  using: "composite"
  steps:
    - name: Run test
      shell: bash
      env:
        HUGGINGFACEHUB_API_TOKEN: ${{ secrets.HUGGINGFACEHUB_API_TOKEN }}
        GOOGLE_CSE_ID: ${{ secrets.GOOGLE_CSE_ID }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        IMAGE_REPO: ${{ inputs.registry }}
        IMAGE_TAG: ${{ inputs.tag }}
        example: ${{ inputs.example }}
        test_case: ${{ inputs.test_case }}
        hardware: ${{ inputs.hardware }}
      run: |
        cd ${{ github.workspace }}/$example/tests
        if [ -f ${test_case} ]; then timeout 30m bash ${test_case}; else echo "Test script {${test_case}} not found, skip test!"; fi

    - name: Clean up container
      shell: bash
      if: cancelled() || failure()
      run: |
        cd ${{ github.workspace }}/${{ inputs.example }}/docker/${{ inputs.hardware }}
        docker compose stop && docker compose rm -f
        echo y | docker system prune --all

    - name: Publish pipeline artifact
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.test_case }}
        path: ${{ github.workspace }}/${{ inputs.example }}/tests/*.log
