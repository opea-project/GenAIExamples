# Copyright (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: Daily update vLLM & vLLM-fork version

on:
  schedule:
    - cron: "30 22 * * *"
  workflow_dispatch:

env:
  REPO_NAME: "opea-project/GenAIExamples"
  BRANCH_NAME: "update_vllm"
  USER_NAME: "CICD-at-OPEA"
  USER_EMAIL: "CICD@opea.dev"

jobs:
  freeze-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Set up Git
        run: |
          git config --global user.name ${{ env.USER_NAME }}
          git config --global user.email ${{ env.USER_EMAIL }}
          git remote set-url origin https://${{ env.USER_NAME }}:"${{ secrets.ACTION_TOKEN }}"@github.com/${{ env.REPO_NAME }}.git
          git fetch

          if git ls-remote https://github.com/${{ env.REPO_NAME }}.git "refs/heads/${{ env.BRANCH_NAME }}" | grep -q "refs/heads/${{ env.BRANCH_NAME }}"; then
            echo "branch ${{ env.BRANCH_NAME }} exists"
            git checkout -b ${{ env.BRANCH_NAME }}
          else
            echo "branch ${{ env.BRANCH_NAME }} not exists"
            git checkout -b ${{ env.BRANCH_NAME }}
            git push origin ${{ env.BRANCH_NAME }}
            echo "branch ${{ env.BRANCH_NAME }} created successfully"
          fi

      - name: Run script
        run: |
          latest_vllm_ver=$(curl -s "https://api.github.com/repos/vllm-project/vllm/tags" | jq '.[0].name' -)
          latest_vllm_fork_ver=$(curl -s "https://api.github.com/repos/HabanaAI/vllm-fork/tags" | jq '.[0].name' -)

          echo "latest_vllm_ver=${latest_vllm_ver}" >> "$GITHUB_ENV"
          echo "latest_vllm_fork_ver=${latest_vllm_fork_ver}" >> "$GITHUB_ENV"

          find . -type f \( -name "*.sh" -o -name "_build_image.yml" \) -exec sed -i "s/VLLM_VER=.*/VLLM_VER=${latest_vllm_ver}/" {} \;
          find . -type f \( -name "*.sh" -o -name "_build_image.yml" \) -exec sed -i "s/VLLM_FORK_VER=.*/VLLM_FORK_VER=${latest_vllm_fork_ver}/" {} \;

      - name: Commit changes
        run: |
          git add .
          if git diff-index --quiet HEAD --; then
            echo "No changes detected, skipping commit."
            exit 1
          else
            git commit -s -m "Update vLLM version to ${latest_vllm_ver} and vLLM-fork version to ${latest_vllm_fork_ver}"
            git push
          fi

      - name: Create Pull Request
        run: |
          pr_count=$(curl -H "Authorization: token ${{ secrets.ACTION_TOKEN }}" -s "https://api.github.com/repos/${{ env.REPO_NAME }}/pulls?state=all&head=${{ env.USER_NAME }}:${{ env.BRANCH_NAME }}" | jq '. | length')
          if [ $pr_count -gt 0 ]; then
            echo "Pull Request exists"
            pr_number=$(curl -H "Authorization: token ${{ secrets.ACTION_TOKEN }}" -s https://api.github.com/repos/${{ env.REPO_NAME }}/pulls?state=all&head=${{ env.USER_NAME }}:${{ env.BRANCH_NAME }}" | jq '.[0].number')
            curl -X PATCH -H "Authorization: token ${{ secrets.ACTION_TOKEN }} -d "{
              \"title\":\"Update vLLM version to ${latest_vllm_ver} and vLLM-fork version to ${latest_vllm_fork_ver}\",
              \"body\":\"Update vLLM version to ${latest_vllm_ver} and vLLM-fork version to ${latest_vllm_fork_ver}\",
              \"state\":\"open\"
            }" "https://api.github.com/repos/${{ env.REPO_NAME }}/pulls/${pr_number}"
            echo "Pull Request updated successfully"
          else
            echo "Pull Request not exists..."
            curl -H "Authorization: token ${{ secrets.ACTION_TOKEN }}" -d "{
              \"title\":\"Update vLLM version to ${latest_vllm_ver} and vLLM-fork version to ${latest_vllm_fork_ver}\",
              \"body\":\"Update vLLM version to ${latest_vllm_ver} and vLLM-fork version to ${latest_vllm_fork_ver}\",
              \"head\":\"${{ env.USER_NAME }}:${{ env.BRANCH_NAME }}\",
              \"base\":\"main\"
            }" "https://api.github.com/repos/${{ env.REPO_NAME }}/pulls"
            echo "Pull Request created successfully"
          fi
