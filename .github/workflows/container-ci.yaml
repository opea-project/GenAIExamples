# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: Example Container CI
permissions: read-all
on:
  workflow_call:
    inputs:
      example_dir:
        required: true
        type: string
      scan:
        default: true
        required: false
        type: boolean
      test:
        default: true
        required: false
        type: boolean
      publish:
        default: false
        required: false
        type: boolean
jobs:
####################################################################################################
# Compose Build
####################################################################################################
  build-containers:
    runs-on: ubuntu-latest # local registry label
    outputs:
      example: ${{ steps.build-example.outputs.container-example }}
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
      with:
        registry: ${{ secrets.REGISTRY }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
    - name: Build Container example
      id: build-example
      uses: ./.github/workflows/composite/docker-build
      with:
        example_dir: ${{ inputs.example_dir }}
        env_overrides: ${{ inputs.env_overrides || env.env_overrides || '' }}
        registry: ${{ secrets.REGISTRY }}
####################################################################################################
# Trivy Scan
####################################################################################################
  setup-scan:
    needs: [build-containers]
    if: ${{ fromJSON(inputs.scan) }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.scan-matrix.outputs.matrix }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit
    - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        path: matrix
    - name: Set Matrix
      id: scan-matrix
      run: echo "matrix=$(cat matrix/*-${{ needs.build-containers.outputs.example }}/*.txt | jq -R '.' | jq -sc '. | unique')" >> $GITHUB_OUTPUT
  scan-containers:
    needs: [setup-scan]
    if: ${{ fromJSON(inputs.scan) }}
    runs-on: ubuntu-latest # local registry label
    strategy:
      matrix:
        container: ${{ fromJSON(needs.setup-scan.outputs.matrix) }}
      fail-fast: false
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
      with:
        registry: ${{ secrets.REGISTRY }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
    - name: Downcase example Dir
      run: echo "example_dir=${EXAMPLE_DIR,,}" >> ${GITHUB_ENV}
      env:
        EXAMPLE_DIR: ${{ inputs.example_dir }}
    - name: Pull Image
      run: docker pull ${{ secrets.REGISTRY }}/${{ env.example_dir }}:${{ matrix.container }}
    - name: Scan Container
      uses: ./.github/workflows/composite/scan
      with:
        image-ref: ${{ secrets.REGISTRY }}/${{ env.example_dir }}:${{ matrix.container }}
        output: ${{ matrix.container }}-${{ env.example_dir }}-scan.txt
    - name: Cleanup
      if: always()
      run: docker rmi -f ${{ secrets.REGISTRY }}/${{ env.example_dir }}:${{ matrix.container }}
    # Requires GitHub Advanced Security
    # - uses: github/codeql-action/upload-sarif@b611370bb5703a7efb587f9d136a52ea24c5c38c # v3.25.11
    #   with:
    #     sarif_file: '${{ matrix.container }}-${{ env.example_dir }}-scan.sarif'
    #     category: '${{ matrix.container }}'
    #   continue-on-error: true
    - uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
      with:
        name: ${{ matrix.container }}-${{ env.example_dir }}-scan
        path: ${{ matrix.container }}-${{ env.example_dir }}-scan.txt
        overwrite: true
####################################################################################################
# Validation
####################################################################################################
  setup-test:
    needs: [build-containers]
    if: ${{ fromJSON(inputs.test) }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.test-matrix.outputs.matrix }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        fetch-depth: 0
    - name: Get Tests
      id: test-matrix
      run: |
        echo "matrix=$(find ${{ inputs.example_dir }}/tests -type f -name 'test_*.sh' -print | \
        sed -n 's|.*/\(test_[^_]*_on_\([^\.]*\)\).sh|\{"test": "\1", "hardware_label": "\2"}|p' | \
        jq -sc .)" >> $GITHUB_OUTPUT
      # ex: [{"test":"test_audioqna_on_xeon","hardware_label":"xeon"},{"test":"test_audioqna_on_gaudi","hardware_label":"gaudi"}]
  test-containers:
    needs: [setup-test]
    if: ${{ needs.setup-test.outputs.matrix != '[]' && fromJSON(inputs.test) }}
    runs-on: ${{ matrix.tests.hardware_label }}
    strategy:
      matrix:
        tests: ${{ fromJson(needs.setup-test.outputs.matrix) }}
        experimental: [true]
      fail-fast: false
    steps:
    - uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - name: Run Test
      run: bash ${{ matrix.tests.test }}.sh
      env:
        REGISTRY: ${{ secrets.REGISTRY }}
####################################################################################################
# Publish
####################################################################################################
  publish:
    needs: [build-containers, scan-containers, test-containers]
    if: ${{ fromJSON(inputs.publish) }}
    runs-on: ubuntu-latest # local registry label
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    - uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Pull Images
      run: docker compose pull
      working-directory: ${{ inputs.example_dir }}
    - name: Push Images
      run: docker compose push
      working-directory: ${{ inputs.example_dir }}
    - name: Cleanup
      if: always()
      run: |
        docker logout
        docker compose down
        echo 'y' | docker system prune
      working-directory: ${{ inputs.example_dir }}
