# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

services:
  tgi-service:
    image: ghcr.io/huggingface/text-generation-inference:2.4.0-intel-cpu
    container_name: tgi-service
    ports:
      - "8008:80"
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      HF_TOKEN: ${HF_TOKEN}
      HF_HUB_DISABLE_PROGRESS_BARS: 1
      HF_HUB_ENABLE_HF_TRANSFER: 0
      host_ip: ${host_ip}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://${host_ip}:8008/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 100
    volumes:
      - "${MODEL_CACHE:-./data}:/data"
    shm_size: 1g
    command: --model-id ${LLM_MODEL_ID} --cuda-graphs 0

  llm:
    image: ${REGISTRY:-opea}/llm-textgen:${TAG:-latest}
    container_name: llm-textgen-server
    depends_on:
      tgi-service:
        condition: service_healthy
    ports:
      - "9000:9000"
    ipc: host
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      LLM_ENDPOINT: ${TGI_LLM_ENDPOINT}
      LLM_MODEL_ID: ${LLM_MODEL_ID}
      HF_TOKEN: ${HF_TOKEN}
      HF_HUB_DISABLE_PROGRESS_BARS: 1
      HF_HUB_ENABLE_HF_TRANSFER: 0
    restart: unless-stopped

  translation-backend-server:
    image: ${REGISTRY:-opea}/translation:${TAG:-latest}
    container_name: translation-backend-server
    depends_on:
      - tgi-service
      - llm
    ports:
      - "8888:8888"
    environment:
      - no_proxy=${no_proxy}
      - https_proxy=${https_proxy}
      - http_proxy=${http_proxy}
      - MEGA_SERVICE_HOST_IP=${MEGA_SERVICE_HOST_IP}
      - MEGA_SERVICE_PORT=8888
      - LLM_SERVICE_HOST_IP=${LLM_SERVICE_HOST_IP}
      - LLM_SERVICE_PORT=${LLM_SERVICE_PORT}
    ipc: host
    restart: always

  translation-ui-server:
    image: ${REGISTRY:-opea}/translation-ui:${TAG:-latest}
    container_name: translation-ui-server
    depends_on:
      - translation-backend-server
    ports:
      - "5173:5173"
    environment:
      - no_proxy=${no_proxy}
      - https_proxy=${https_proxy}
      - http_proxy=${http_proxy}
      - BACKEND_SERVICE_ENDPOINT=${BACKEND_SERVICE_ENDPOINT}
    ipc: host
    restart: always

  translation-nginx-server:
    image: nginx:alpine
    container_name: translation-nginx-server
    depends_on:
      - translation-backend-server
      - translation-ui-server
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - no_proxy=${no_proxy}
      - https_proxy=${https_proxy}
      - http_proxy=${http_proxy}
    ipc: host
    restart: always

networks:
  default:
    driver: bridge
