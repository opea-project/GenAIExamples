# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

version: "3.3"

services:
  redis-vector-db:
    image: redis/redis-stack:7.2.0-v9
    container_name: redis-vector-db
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
    ports:
      - "6379:6379"
      - "8001:8001"
  dataprep-redis-service:
    image: ${REGISTRY:-opea}/dataprep:${TAG:-latest}
    container_name: dataprep-redis-server
    depends_on:
      - redis-vector-db
    ports:
      - "6007:5000"
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      REDIS_URL: redis://redis-vector-db:6379
      REDIS_HOST: redis-vector-db
      INDEX_NAME: ${INDEX_NAME}
      TEI_EMBEDDING_ENDPOINT: http://tei-embedding-service:80
      HF_TOKEN: ${HF_TOKEN}
      DATAPREP_TYPE: ${DATAPREP_TYPE}
      LOGFLAG: ${LOGFLAG}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/v1/health_check || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 50
    restart: unless-stopped
  tei-embedding-service:
    image: ghcr.io/huggingface/text-embeddings-inference:cpu-1.6
    entrypoint: /bin/sh -c "apt-get update && apt-get install -y curl && text-embeddings-router --json-output --model-id ${EMBEDDING_MODEL_ID} --auto-truncate"
    container_name: tei-embedding-server
    ports:
      - "6006:80"
    volumes:
      - "${MODEL_CACHE:-./data_embedding}:/data"
    shm_size: 1g
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      host_ip: ${host_ip}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 60
  retriever:
    image: ${REGISTRY:-opea}/retriever:${TAG:-latest}
    container_name: retriever-redis-server
    depends_on:
      - redis-vector-db
    ports:
      - "7001:7000"
    ipc: host
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      REDIS_URL: redis://redis-vector-db:6379
      REDIS_HOST: redis-vector-db
      INDEX_NAME: ${INDEX_NAME}
      TEI_EMBEDDING_ENDPOINT: http://tei-embedding-service:80
      HF_TOKEN: ${HF_TOKEN}
      LOGFLAG: ${LOGFLAG}
      RETRIEVER_COMPONENT_NAME: "OPEA_RETRIEVER_REDIS"
    restart: unless-stopped
  tei-reranking-service:
    image: ghcr.io/huggingface/text-embeddings-inference:cpu-1.6
    entrypoint: /bin/sh -c "apt-get update && apt-get install -y curl && text-embeddings-router --json-output --model-id ${RERANK_MODEL_ID} --auto-truncate"
    container_name: tei-reranking-server
    ports:
      - "8808:80"
    volumes:
      - "${MODEL_CACHE:-./data_tei}:/data"
    shm_size: 1g
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      HF_TOKEN: ${HF_TOKEN}
      HF_HUB_DISABLE_PROGRESS_BARS: 1
      HF_HUB_ENABLE_HF_TRANSFER: 0
      host_ip: ${host_ip}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 60

  chatqna-xeon-backend-server:
    image: ${REGISTRY:-opea}/chatqna:${TAG:-latest}
    container_name: chatqna-xeon-backend-server
    depends_on:
      redis-vector-db:
        condition: service_started
      tei-embedding-service:
        condition: service_healthy
      dataprep-redis-service:
        condition: service_healthy
      retriever:
        condition: service_started
      tei-reranking-service:
        condition: service_healthy
    ports:
      - "8888:8888"
    environment:
      no_proxy: ${no_proxy}
      https_proxy: ${https_proxy}
      http_proxy: ${http_proxy}
      MEGA_SERVICE_HOST_IP: chatqna-xeon-backend-server
      EMBEDDING_SERVER_HOST_IP: tei-embedding-service
      EMBEDDING_SERVER_PORT: ${EMBEDDING_SERVER_PORT:-80}
      RETRIEVER_SERVICE_HOST_IP: retriever
      RERANK_SERVER_HOST_IP: tei-reranking-service
      RERANK_SERVER_PORT: ${RERANK_SERVER_PORT:-80}
      LLM_SERVER_HOST_IP: ${REMOTE_ENDPOINT}
      OPENAI_API_KEY: ${API_KEY}
      LLM_SERVER_PORT: ${LLM_SERVER_PORT:-80}
      LLM_MODEL: ${LLM_MODEL_ID}
      LOGFLAG: ${LOGFLAG}
    ipc: host
    restart: always

  codegen-xeon-backend-server:
    image: ${REGISTRY:-opea}/codegen:${TAG:-latest}
    container_name: codegen-xeon-backend-server
    ports:
      - "7778:7778"
    environment:
      no_proxy: ${no_proxy}
      https_proxy: ${https_proxy}
      http_proxy: ${http_proxy}
      MEGA_SERVICE_HOST_IP: ${host_ip}
      LLM_MODEL_ID: ${LLM_MODEL_ID}
      OPENAI_API_KEY: ${API_KEY}
      LLM_SERVICE_HOST_IP: ${REMOTE_ENDPOINT}
      LLM_SERVICE_PORT: ${LLM_SERVICE_HOST_PORT_CODEGEN:-9000}
      LOGFLAG: ${LOGFLAG}
    ipc: host
    restart: always
  mongo:
    image: mongo:7.0.11
    container_name: mongodb
    ports:
      - 27017:27017
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      no_proxy: ${no_proxy}
    command: mongod --quiet --logpath /dev/null

  chathistory-mongo:
    image: ${REGISTRY:-opea}/chathistory-mongo:${TAG:-latest}
    container_name: chathistory-mongo-server
    ports:
      - "6012:6012"
    ipc: host
    environment:
      http_proxy: ${http_proxy}
      no_proxy: ${no_proxy}
      https_proxy: ${https_proxy}
      MONGO_HOST: ${MONGO_HOST:-mongo}
      MONGO_PORT: ${MONGO_PORT:-27017}
      COLLECTION_NAME: ${COLLECTION_NAME:-Conversations}
      LOGFLAG: ${LOGFLAG}
    restart: unless-stopped

  promptregistry-mongo:
    image: ${REGISTRY:-opea}/promptregistry-mongo:${TAG:-latest}
    container_name: promptregistry-mongo-server
    ports:
      - "6018:6018"
    ipc: host
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      no_proxy: ${no_proxy}
      MONGO_HOST: ${MONGO_HOST:-mongo}
      MONGO_PORT: ${MONGO_PORT:-27017}
      COLLECTION_NAME: ${PROMPT_COLLECTION_NAME:-prompt}
      LOGFLAG: ${LOGFLAG}
    restart: unless-stopped
  keycloak:
    image: quay.io/keycloak/keycloak:25.0.2
    container_name: keycloak-server
    ports:
      - 8080:8080
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_PROXY=edge
    ipc: host
    command: start-dev
    restart: always

  productivity-suite-xeon-react-ui-server:
    image: ${REGISTRY:-opea}/productivity-suite-react-ui-server:${TAG:-latest}
    container_name: productivity-suite-xeon-react-ui-server
    ports:
      - "5174:80"
    environment:
      - APP_BACKEND_SERVICE_ENDPOINT_CHATQNA=${BACKEND_SERVICE_ENDPOINT_CHATQNA}
      - APP_BACKEND_SERVICE_ENDPOINT_CODEGEN=${BACKEND_SERVICE_ENDPOINT_CODEGEN}
      - APP_BACKEND_SERVICE_ENDPOINT_DOCSUM=${BACKEND_SERVICE_ENDPOINT_DOCSUM}
      - APP_DATAPREP_SERVICE_ENDPOINT=${DATAPREP_SERVICE_ENDPOINT}
      - APP_DATAPREP_GET_FILE_ENDPOINT=${DATAPREP_GET_FILE_ENDPOINT}
      - APP_DATAPREP_DELETE_FILE_ENDPOINT=${DATAPREP_DELETE_FILE_ENDPOINT}
      - APP_CHAT_HISTORY_CREATE_ENDPOINT=${CHAT_HISTORY_CREATE_ENDPOINT}
      - APP_CHAT_HISTORY_DELETE_ENDPOINT=${CHAT_HISTORY_DELETE_ENDPOINT}
      - APP_CHAT_HISTORY_GET_ENDPOINT=${CHAT_HISTORY_GET_ENDPOINT}
      - APP_PROMPT_SERVICE_GET_ENDPOINT=${PROMPT_SERVICE_GET_ENDPOINT}
      - APP_PROMPT_SERVICE_CREATE_ENDPOINT=${PROMPT_SERVICE_CREATE_ENDPOINT}
      - APP_PROMPT_SERVICE_DELETE_ENDPOINT=${PROMPT_SERVICE_DELETE_ENDPOINT}
      - APP_KEYCLOAK_SERVICE_ENDPOINT=${KEYCLOAK_SERVICE_ENDPOINT}
      - LOGFLAG=${LOGFLAG}
    ipc: host
    restart: always

  llm-docsum-tgi:
    image: ${REGISTRY:-opea}/llm-docsum:${TAG:-latest}
    container_name: docsum-xeon-llm-server
    ports:
      - ${LLM_PORT_DOCSUM:-9003}:9000
    ipc: host
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      LLM_ENDPOINT: ${REMOTE_ENDPOINT}
      LLM_MODEL_ID: ${LLM_MODEL_ID}
      OPENAI_API_KEY: ${API_KEY}
      HF_TOKEN: ${HF_TOKEN}
      MAX_INPUT_TOKENS: ${MAX_INPUT_TOKENS:-1024}
      MAX_TOTAL_TOKENS: ${MAX_TOTAL_TOKENS:-2048}
      DocSum_COMPONENT_NAME: ${DocSum_COMPONENT_NAME}
      LOGFLAG: ${LOGFLAG:-False}
    restart: unless-stopped
  docsum-xeon-backend-server:
    image: ${REGISTRY:-opea}/docsum:${TAG:-latest}
    container_name: docsum-xeon-backend-server
    depends_on:
      - llm-docsum-tgi
    ports:
      - "${BACKEND_SERVICE_PORT_DOCSUM:-8890}:8888"
    environment:
      - no_proxy=${no_proxy}
      - https_proxy=${https_proxy}
      - http_proxy=${http_proxy}
      - MEGA_SERVICE_HOST_IP=${host_ip}
      - LLM_SERVICE_HOST_IP=llm-docsum-tgi
      - LLM_SERVICE_PORT=9000
      - ASR_SERVICE_HOST_IP=whisper
      - OTEL_SDK_DISABLED=true
      - OTEL_TRACES_EXPORTER=none
    ipc: host
    restart: always
  whisper:
    image: ${REGISTRY:-opea}/whisper:${TAG:-latest}
    container_name: whisper-server
    ports:
      - "7066:7066"
    ipc: host
    environment:
      no_proxy: ${no_proxy}
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
    restart: unless-stopped
networks:
  default:
    driver: bridge
